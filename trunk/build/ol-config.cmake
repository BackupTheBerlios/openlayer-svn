# Create openlayer-config script for *nix based systems

file(WRITE ${EXECUTABLE_OUTPUT_PATH}/openlayer-config "#!/bin/sh\n")
file(APPEND ${EXECUTABLE_OUTPUT_PATH}/openlayer-config "\# openlayer-config autogenerated by cbuild script from the OpenLayer library\n")
file(APPEND ${EXECUTABLE_OUTPUT_PATH}/openlayer-config "")
file(APPEND ${EXECUTABLE_OUTPUT_PATH}/openlayer-config "version=2.0\n")
file(APPEND ${EXECUTABLE_OUTPUT_PATH}/openlayer-config "prefix=${CMAKE_INSTALL_PREFIX}\n")
file(APPEND ${EXECUTABLE_OUTPUT_PATH}/openlayer-config "cflags=\"-I\$prefix/include -I\$prefix/include/OpenLayer ${FREETYPE_INCLUDE}\"\n")
file(APPEND ${EXECUTABLE_OUTPUT_PATH}/openlayer-config "libs=\"-lopenlayer ")
foreach(WORD ${REQUIRED_LIBS})
	file(APPEND ${EXECUTABLE_OUTPUT_PATH}/openlayer-config "${WORD} ")
endforeach(WORD)
file(APPEND ${EXECUTABLE_OUTPUT_PATH}/openlayer-config "\"\n")
file(APPEND ${EXECUTABLE_OUTPUT_PATH}/openlayer-config "\n")
file(APPEND ${EXECUTABLE_OUTPUT_PATH}/openlayer-config "usage()\n")
file(APPEND ${EXECUTABLE_OUTPUT_PATH}/openlayer-config "{\n")
file(APPEND ${EXECUTABLE_OUTPUT_PATH}/openlayer-config "    cat <<EOF\n")
file(APPEND ${EXECUTABLE_OUTPUT_PATH}/openlayer-config "Usage: openlayer-config [OPTION]...\n")
file(APPEND ${EXECUTABLE_OUTPUT_PATH}/openlayer-config "\n")
file(APPEND ${EXECUTABLE_OUTPUT_PATH}/openlayer-config "Known values for OPTION are:\n")
file(APPEND ${EXECUTABLE_OUTPUT_PATH}/openlayer-config "\n")
file(APPEND ${EXECUTABLE_OUTPUT_PATH}/openlayer-config "  --libs                print library linking information\n")
file(APPEND ${EXECUTABLE_OUTPUT_PATH}/openlayer-config "  --cflags              print pre-processor and compiler flags\n")
file(APPEND ${EXECUTABLE_OUTPUT_PATH}/openlayer-config "  --version             output version information\n")
file(APPEND ${EXECUTABLE_OUTPUT_PATH}/openlayer-config "\n")
file(APPEND ${EXECUTABLE_OUTPUT_PATH}/openlayer-config "EOF\n")
file(APPEND ${EXECUTABLE_OUTPUT_PATH}/openlayer-config "\n")
file(APPEND ${EXECUTABLE_OUTPUT_PATH}/openlayer-config "    exit \$1\n")
file(APPEND ${EXECUTABLE_OUTPUT_PATH}/openlayer-config "}\n")
file(APPEND ${EXECUTABLE_OUTPUT_PATH}/openlayer-config "\n")
file(APPEND ${EXECUTABLE_OUTPUT_PATH}/openlayer-config "if test \$\# -eq 0; then\n")
file(APPEND ${EXECUTABLE_OUTPUT_PATH}/openlayer-config "    usage 1\n")
file(APPEND ${EXECUTABLE_OUTPUT_PATH}/openlayer-config "fi\n")
file(APPEND ${EXECUTABLE_OUTPUT_PATH}/openlayer-config "\n")
file(APPEND ${EXECUTABLE_OUTPUT_PATH}/openlayer-config "while test \$\# -gt 0; do\n")
file(APPEND ${EXECUTABLE_OUTPUT_PATH}/openlayer-config "    case \"\$1\" in\n")
file(APPEND ${EXECUTABLE_OUTPUT_PATH}/openlayer-config "    -*=*) optarg=`echo \"\$1\" | sed 's/[-_a-zA-Z0-9]*=//'` ;;\n")
file(APPEND ${EXECUTABLE_OUTPUT_PATH}/openlayer-config "    *) optarg= ;;\n")
file(APPEND ${EXECUTABLE_OUTPUT_PATH}/openlayer-config "    esac\n")
file(APPEND ${EXECUTABLE_OUTPUT_PATH}/openlayer-config "\n")
file(APPEND ${EXECUTABLE_OUTPUT_PATH}/openlayer-config "    case \"\$1\" in\n")
file(APPEND ${EXECUTABLE_OUTPUT_PATH}/openlayer-config "    --version)\n")
file(APPEND ${EXECUTABLE_OUTPUT_PATH}/openlayer-config "        echo \$version\n")
file(APPEND ${EXECUTABLE_OUTPUT_PATH}/openlayer-config "        ;;\n")
file(APPEND ${EXECUTABLE_OUTPUT_PATH}/openlayer-config "    --cflags)\n")
file(APPEND ${EXECUTABLE_OUTPUT_PATH}/openlayer-config "        echo \$cflags\n")
file(APPEND ${EXECUTABLE_OUTPUT_PATH}/openlayer-config "        ;;\n")
file(APPEND ${EXECUTABLE_OUTPUT_PATH}/openlayer-config "\n")
file(APPEND ${EXECUTABLE_OUTPUT_PATH}/openlayer-config "    --libs)\n")
file(APPEND ${EXECUTABLE_OUTPUT_PATH}/openlayer-config "        echo \$libs\n")
file(APPEND ${EXECUTABLE_OUTPUT_PATH}/openlayer-config "        ;;\n")
file(APPEND ${EXECUTABLE_OUTPUT_PATH}/openlayer-config "    esac\n")
file(APPEND ${EXECUTABLE_OUTPUT_PATH}/openlayer-config "    shift\n")
file(APPEND ${EXECUTABLE_OUTPUT_PATH}/openlayer-config "done\n")
exec_program(chmod ARGS +x ${EXECUTABLE_OUTPUT_PATH}/openlayer-config OUTPUT_VARIABLE NULL RETURN_VALUE NULL)
